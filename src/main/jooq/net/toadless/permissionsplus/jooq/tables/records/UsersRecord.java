/*
 * This file is generated by jOOQ.
 */
package net.toadless.permissionsplus.jooq.tables.records;


import net.toadless.permissionsplus.jooq.tables.Users;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record2<String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.users.uuid</code>.
     */
    public UsersRecord setUuid(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.users.uuid</code>.
     */
    public String getUuid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.users.group_id</code>.
     */
    public UsersRecord setGroupId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.users.group_id</code>.
     */
    public Long getGroupId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Users.USERS.UUID;
    }

    @Override
    public Field<Long> field2() {
        return Users.USERS.GROUP_ID;
    }

    @Override
    public String component1() {
        return getUuid();
    }

    @Override
    public Long component2() {
        return getGroupId();
    }

    @Override
    public String value1() {
        return getUuid();
    }

    @Override
    public Long value2() {
        return getGroupId();
    }

    @Override
    public UsersRecord value1(String value) {
        setUuid(value);
        return this;
    }

    @Override
    public UsersRecord value2(Long value) {
        setGroupId(value);
        return this;
    }

    @Override
    public UsersRecord values(String value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(String uuid, Long groupId) {
        super(Users.USERS);

        setUuid(uuid);
        setGroupId(groupId);
    }
}
