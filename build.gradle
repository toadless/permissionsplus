plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'nu.studer.jooq' version '7.1.1'
}

group = 'net.toadless'
version = '1.0'

project.libsDirectory.set(new File(BUILD_DIR))

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {

    // placeholders
    compileOnly 'me.clip:placeholderapi:2.11.1'

    // paper
    compileOnly 'io.papermc.paper:paper-api:1.19-R0.1-SNAPSHOT'

    //Database
    implementation 'org.postgresql:postgresql:42.3.6'
    jooqGenerator 'org.postgresql:postgresql:42.3.6'

    implementation 'com.zaxxer:HikariCP:5.0.1'
    implementation 'org.jooq:jooq:3.16.6'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

jooq {
    version = '3.14.4'
    configurations {
        main {
            generateSchemaSourceOnCompilation = false
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    url = DB_URL
                    user = DB_USER
                    password = DB_PASSWORD
                    driver = 'org.postgresql.Driver'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'public'
                        includes = '.*'
                        excludes = ''
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        packageName = 'net.toadless.permissionsplus.jooq'
                        directory = "src/main/jooq"
                        clean = true
                    }
                    strategy.name = "org.jooq.codegen.DefaultGeneratorStrategy"
                }
            }
        }
    }
}